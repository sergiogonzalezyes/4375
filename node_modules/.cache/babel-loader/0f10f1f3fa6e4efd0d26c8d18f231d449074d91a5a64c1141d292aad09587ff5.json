{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  computed: {\n    isAuthenticated() {\n      // Access the isAuthenticated state from your store\n      return this.$store.state.app.isAuthenticated;\n    },\n    username() {\n      // Access the username state from your store\n      return this.$store.state.app.username;\n    }\n  },\n  data() {\n    return {\n      links: [{\n        name: 'Dashboard',\n        path: '/dashboard',\n        role: 'admin'\n      }, {\n        name: 'Notifications',\n        path: '/notifications'\n      }]\n    };\n  },\n  methods: {\n    logout() {\n      this.$router.push('/').then(() => {\n        this.$store.dispatch('app/logout');\n      });\n    }\n  }\n};","map":{"version":3,"names":["computed","isAuthenticated","$store","state","app","username","data","links","name","path","role","methods","logout","$router","push","then","dispatch"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <v-app id=\"app\">\n    <div v-if=\"isAuthenticated\">\n      <!-- Sidebar Navigation (Drawer) -->\n      <v-navigation-drawer app>\n        <v-list rounded=\"true\">\n          <!-- Dynamic links based on the user's role -->\n          <router-link\n            v-for=\"link in links\"\n            :key=\"link.name\"\n            :to=\"link.path\"\n          >\n            <v-list-item link>\n              {{ link.name }}\n            </v-list-item>\n          </router-link>\n\n          <v-divider class=\"my-2\"></v-divider>\n\n          <v-list-item\n            color=\"grey-lighten-4\"\n            link\n            @click=\"logout\"\n          >\n            Logout\n          </v-list-item>\n        </v-list>\n      </v-navigation-drawer>\n\n      <!-- AppBar -->\n      <v-app-bar flat>\n        <v-container class=\"mx-auto d-flex align-center justify-center\">\n          <!-- Dynamic greeting based on logged-in user -->\n          <span class=\"me-4\">\n            Hello, {{ username }}!\n          </span>\n\n          <v-avatar\n            class=\"me-4\"\n            color=\"grey-darken-1\"\n            size=\"32\"\n          ></v-avatar>\n\n          <v-responsive max-width=\"160\">\n            <v-text-field\n              dense\n              flat\n              hide-details\n              label=\"Search\"\n              rounded=\"lg\"\n              single-line\n              solo-inverted\n            ></v-text-field>\n          </v-responsive>\n        </v-container>\n      </v-app-bar>\n\n      <!-- Main Content -->\n      <v-main class=\"bg-grey-lighten-3\">\n        <v-container>\n          <router-view></router-view>\n        </v-container>\n      </v-main>\n    </div>\n\n    <!-- If the user is not authenticated, only show the login page -->\n    <div v-else>\n      <router-view class=\"router-view-login\"></router-view>\n    </div>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  computed: {\n    isAuthenticated() {\n      // Access the isAuthenticated state from your store\n      return this.$store.state.app.isAuthenticated;\n    },\n    username() {\n      // Access the username state from your store\n      return this.$store.state.app.username;\n    },\n  },\n  data() {\n    return {\n      links: [\n        { name: 'Dashboard', path: '/dashboard', role: 'admin' },\n        { name: 'Notifications', path: '/notifications' },\n      ],\n    };\n  },\n  methods: {\n    logout() {\n      this.$router.push('/').then(() => {\n        this.$store.dispatch('app/logout');\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.router-view-login {\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style>\n"],"mappings":";AAyEA;EACAA,QAAA;IACAC,gBAAA;MACA;MACA,YAAAC,MAAA,CAAAC,KAAA,CAAAC,GAAA,CAAAH,eAAA;IACA;IACAI,SAAA;MACA;MACA,YAAAH,MAAA,CAAAC,KAAA,CAAAC,GAAA,CAAAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,KAAA,GACA;QAAAC,IAAA;QAAAC,IAAA;QAAAC,IAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,IAAA;MAAA;IAEA;EACA;EACAE,OAAA;IACAC,OAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,MAAAC,IAAA;QACA,KAAAb,MAAA,CAAAc,QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}