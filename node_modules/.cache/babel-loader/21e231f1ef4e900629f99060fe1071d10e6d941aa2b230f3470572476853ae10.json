{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nimport LoginForm from '../components/LoginForm.vue';\nexport default {\n  data() {\n    return {\n      errorMsg: '',\n      username: '',\n      password: ''\n    };\n  },\n  methods: {\n    async handleLogin() {\n      console.log('handleLogin called');\n      const credentials = {\n        username: this.username,\n        password: this.password\n      };\n      console.log(credentials.password);\n      console.log(credentials.username);\n      console.log('handle login credentials =', credentials);\n      try {\n        const success = await this.$store.dispatch('login', credentials); // Dispatch 'login' action directly\n\n        if (success) {\n          // Redirect to dashboard if login is successful\n          this.$router.push('/dashboard');\n        } else {\n          // Set error message to be displayed to the user\n          this.errorMsg = 'Invalid username or password';\n        }\n      } catch (error) {\n        console.error('An error occurred during login:', error);\n      }\n    }\n  },\n  components: {\n    LoginForm\n  }\n};","map":{"version":3,"names":["mapActions","LoginForm","data","errorMsg","username","password","methods","handleLogin","console","log","credentials","success","$store","dispatch","$router","push","error","components"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\n  <div class=\"login\">\n    <LoginForm :onLogin=\"handleLogin\" :errorMsg=\"errorMsg\" />\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\nimport LoginForm from '../components/LoginForm.vue';\n\nexport default {\n  data() {\n    return {\n      errorMsg: '',\n      username: '',\n      password: '',\n    };\n  },\n  methods: {\n  async handleLogin() {\n    console.log('handleLogin called')\n    const credentials = {\n      username: this.username,\n      password: this.password,\n    };\n    console.log(credentials.password)\n    console.log(credentials.username)\n    \n    console.log('handle login credentials =', credentials);\n    \n    try {\n      const success = await this.$store.dispatch('login', credentials); // Dispatch 'login' action directly\n      \n      if (success) {\n        // Redirect to dashboard if login is successful\n        this.$router.push('/dashboard');\n      } else {\n        // Set error message to be displayed to the user\n        this.errorMsg = 'Invalid username or password';\n      }\n    } catch (error) {\n      console.error('An error occurred during login:', error);\n    }\n  },\n},\n\n  components: {\n    LoginForm,\n  },\n};\n</script>\n"],"mappings":";AAOA,SAAAA,UAAA;AACA,OAAAC,SAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,YAAA;MACAC,OAAA,CAAAC,GAAA;MACA,MAAAC,WAAA;QACAN,QAAA,OAAAA,QAAA;QACAC,QAAA,OAAAA;MACA;MACAG,OAAA,CAAAC,GAAA,CAAAC,WAAA,CAAAL,QAAA;MACAG,OAAA,CAAAC,GAAA,CAAAC,WAAA,CAAAN,QAAA;MAEAI,OAAA,CAAAC,GAAA,+BAAAC,WAAA;MAEA;QACA,MAAAC,OAAA,cAAAC,MAAA,CAAAC,QAAA,UAAAH,WAAA;;QAEA,IAAAC,OAAA;UACA;UACA,KAAAG,OAAA,CAAAC,IAAA;QACA;UACA;UACA,KAAAZ,QAAA;QACA;MACA,SAAAa,KAAA;QACAR,OAAA,CAAAQ,KAAA,oCAAAA,KAAA;MACA;IACA;EACA;EAEAC,UAAA;IACAhB;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}