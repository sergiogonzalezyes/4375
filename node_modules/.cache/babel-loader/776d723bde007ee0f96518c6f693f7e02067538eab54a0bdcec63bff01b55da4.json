{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\n\n// Import the store\nimport { useAppStore } from '../store/app.js'; // Update the import path\n\n// Routes definition\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: () => import('@/views/LoginView.vue')\n}, {\n  path: '/dashboard',\n  name: 'Dashboard',\n  component: () => import('@/views/DashboardView.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/notifications',\n  name: 'Notifications',\n  component: () => import('@/views/NotificationsView.vue'),\n  meta: {\n    requiresAuth: true\n  }\n},\n// Fallback route redirects any unmatched routes to '/login'\n{\n  path: '/:pathMatch(.*)*',\n  redirect: '/login'\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  console.log(`Navigating from ${from.fullPath} to ${to.fullPath}`);\n  const store = useAppStore();\n  const userIsAuthenticated = store.isAuthenticated;\n  console.log(`User is authenticated: ${userIsAuthenticated}`);\n\n  // If the route requires authentication and the user isn't authenticated, redirect to login\n  if (to.matched.some(record => record.meta.requiresAuth) && !userIsAuthenticated) {\n    console.log(\"Redirecting to login because the user isn't authenticated.\");\n    router.push('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","useAppStore","routes","path","name","component","meta","requiresAuth","redirect","router","history","process","env","BASE_URL","beforeEach","to","from","next","console","log","fullPath","store","userIsAuthenticated","isAuthenticated","matched","some","record","push"],"sources":["/Users/sergiogonzalez/Desktop/test/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\n\n// Import the store\nimport { useAppStore } from '../store/app.js'; // Update the import path\n\n// Routes definition\nconst routes = [\n  {\n    path: '/login',\n    name: 'Login',\n    component: () => import('@/views/LoginView.vue'),\n  },\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    component: () => import('@/views/DashboardView.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/notifications',\n    name: 'Notifications',\n    component: () => import('@/views/NotificationsView.vue'),\n    meta: { requiresAuth: true }\n  },\n  // Fallback route redirects any unmatched routes to '/login'\n  {\n    path: '/:pathMatch(.*)*',\n    redirect: '/login',\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nrouter.beforeEach((to, from, next) => {\n  console.log(`Navigating from ${from.fullPath} to ${to.fullPath}`);\n  const store = useAppStore();\n  const userIsAuthenticated = store.isAuthenticated;\n  console.log(`User is authenticated: ${userIsAuthenticated}`);\n\n  // If the route requires authentication and the user isn't authenticated, redirect to login\n  if (to.matched.some(record => record.meta.requiresAuth) && !userIsAuthenticated) {\n    console.log(\"Redirecting to login because the user isn't authenticated.\");\n    router.push('/login');\n  } else {\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":";AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;;AAE3D;AACA,SAASC,WAAW,QAAQ,iBAAiB,CAAC,CAAC;;AAE/C;AACA,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB;AACjD,CAAC,EACD;EACEF,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,2BAA2B,CAAC;EACpDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,+BAA+B,CAAC;EACxDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC;AACD;AACA;EACEJ,IAAI,EAAE,kBAAkB;EACxBK,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMC,MAAM,GAAGV,YAAY,CAAC;EAC1BW,OAAO,EAAEV,gBAAgB,CAACW,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CX;AACF,CAAC,CAAC;AAEFO,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpCC,OAAO,CAACC,GAAG,CAAE,mBAAkBH,IAAI,CAACI,QAAS,OAAML,EAAE,CAACK,QAAS,EAAC,CAAC;EACjE,MAAMC,KAAK,GAAGpB,WAAW,CAAC,CAAC;EAC3B,MAAMqB,mBAAmB,GAAGD,KAAK,CAACE,eAAe;EACjDL,OAAO,CAACC,GAAG,CAAE,0BAAyBG,mBAAoB,EAAC,CAAC;;EAE5D;EACA,IAAIP,EAAE,CAACS,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACpB,IAAI,CAACC,YAAY,CAAC,IAAI,CAACe,mBAAmB,EAAE;IAC/EJ,OAAO,CAACC,GAAG,CAAC,4DAA4D,CAAC;IACzEV,MAAM,CAACkB,IAAI,CAAC,QAAQ,CAAC;EACvB,CAAC,MAAM;IACLV,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}